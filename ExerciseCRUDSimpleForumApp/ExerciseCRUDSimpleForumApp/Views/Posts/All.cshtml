@using ExerciseCRUDSimpleForumApp.ViewModels
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> userManager
@model IEnumerable<PostViewModel>

@{
    this.ViewData["Title"] = "All posts";
}

<h2 class="text-center">@ViewData["Title"]</h2>
<hr />

@if (this.User.Identity.IsAuthenticated)
{
    <div class="d-grid gap-2 mb-2">
        <a asp-controller="Posts" asp-action="Add" class="btn btn-primary">Add Post</a>
    </div>
}

@if (Model.Count() > 0)
{
    <div class="row">
        @foreach (var post in Model)
        {
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title text-center">@post.Title</h4>
                        <h5>CreatedBy: @post.UserName</h5>
                        <p class="card-text">@post.Content</p>
                        @if (post.AddedByUserId == this.userManager.GetUserId(this.User))
                        {
                            <div class="d-grid gap-2">
                                <a asp-controller="Posts" asp-action="Edit" asp-route-id="@post.Id" class="btn btn-warning">Edit</a>
                                <form class="mt-2" asp-controller="Posts" asp-action="Delete" asp-route-id="@post.Id">
                                    <div class="d-grid gap-2">
                                        <input type="submit" value="Delete" class="btn btn-danger mb-2"
                                   onclick="return confirm('Are you sure you want  to delete post: @post.Title')" />
                                    </div>
                                </form>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>    
}
else
{
    <p class="text-center">No posts yet!</p>
}
